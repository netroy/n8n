URL: https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.information-extractor/
Scraped_At: 2025-05-20T18:53:32.486531

Information Extractor node
#
Use the Information Extractor node to extract structured information from incoming data.
On this page, you'll find the node parameters for the Information Extractor node,
and links to more resources.
Node parameters
#
Text
defines the input text to extract information from. This is usually an expression that references a field from the input items. For example, this could be
{{ $json.chatInput }}
if the input is a chat trigger, or
{{ $json.text }}
if a previous node is Extract from PDF.
Use
Schema Type
to choose how you want to describe the desired output data format. You can choose between:
From Attribute Description
: This option allows you to define the schema by specifying the list of attributes and their descriptions.
Generate From JSON Example
: Input an example JSON object to automatically generate the schema. The node uses the object property types and names. It ignores the actual values.
Define Below
: Manually input the JSON schema. Read the JSON Schema
guides and examples
for help creating a valid JSON schema.
Node options
#
System Prompt Template
: Use this option to change the system prompt that's used for the information extraction. n8n automatically appends format specification instructions to the prompt.
Related resources
#
View n8n's
Advanced AI
documentation.
AI glossary
#
completion
: Completions are the responses generated by a model like GPT.
hallucinations
: Hallucination in AI is when an LLM (large language model) mistakenly perceives patterns or objects that don't exist.
vector database
: A vector database stores mathematical representations of information. Use with embeddings and retrievers to create a database that your AI can access when answering questions.
vector store
: A vector store, or vector database, stores mathematical representations of information. Use with embeddings and retrievers to create a database that your AI can access when answering questions.
Was this page helpful?
Thanks for your feedback!
Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our
GitHub repo
.