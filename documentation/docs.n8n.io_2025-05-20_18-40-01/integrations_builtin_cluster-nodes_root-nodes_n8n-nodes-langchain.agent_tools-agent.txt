URL: https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.agent/tools-agent/
Scraped_At: 2025-05-20T18:53:23.392120

Tools AI Agent node
#
The Tools Agent uses external
tools
and APIs to perform actions and retrieve information. It can understand the capabilities of different tools and determine which tool to use depending on the task. This agent helps integrate LLMs with various external services and databases.
This agent has an enhanced ability to work with tools and can ensure a standard output format.
The Tools Agent implements
Langchain's tool calling
interface. This interface describes available tools and their schemas. The agent also has improved output parsing capabilities, as it passes the parser to the model as a formatting tool.
Refer to
AI Agent
for more information on the AI Agent node itself.
You can use this agent with the
Chat Trigger
node. Attach a memory sub-node so that users can have an ongoing conversation with multiple queries. Memory doesn't persist between sessions.
This agent supports the following chat models:
OpenAI Chat Model
Groq Chat Model
Mistral Cloud Chat Model
Anthropic Chat Model
Azure OpenAI Chat Model
The Tools Agent can use the following tools...
Call n8n Workflow
Code
HTTP Request
Action Network
ActiveCampaign
Affinity
Agile CRM
Airtable
APITemplate.io
Asana
AWS Lambda
AWS S3
AWS SES
AWS Textract
AWS Transcribe
Baserow
Bubble
Calculator
ClickUp
CoinGecko
Compression
Crypto
DeepL
DHL
Discord
Dropbox
Elasticsearch
ERPNext
Facebook Graph API
FileMaker
Ghost
Git
GitHub
GitLab
Gmail
Google Analytics
Google BigQuery
Google Calendar
Google Chat
Google Cloud Firestore
Google Cloud Realtime Database
Google Contacts
Google Docs
Google Drive
Google Sheets
Google Slides
Google Tasks
Google Translate
Google Workspace Admin
Gotify
Grafana
GraphQL
Hacker News
Home Assistant
HubSpot
Jenkins
Jira Software
JWT
Kafka
LDAP
Line
LinkedIn
Mailcheck
Mailgun
Mattermost
Mautic
Medium
Microsoft Excel 365
Microsoft OneDrive
Microsoft Outlook
Microsoft SQL
Microsoft Teams
Microsoft To Do
Monday.com
MongoDB
MQTT
MySQL
NASA
Nextcloud
NocoDB
Notion
Odoo
OpenWeatherMap
Pipedrive
Postgres
Pushover
QuickBooks Online
QuickChart
RabbitMQ
Reddit
Redis
RocketChat
S3
Salesforce
Send Email
SendGrid
SerpApi (Google Search)
Shopify
Slack
Spotify
Stripe
Supabase
Telegram
Todoist
TOTP
Trello
Twilio
urlscan.io
Vector Store
Webflow
Wikipedia
Wolfram|Alpha
WooCommerce
Wordpress
X (Formerly Twitter)
YouTube
Zendesk
Zoho CRM
Zoom
Node parameters
#
Configure the Tools Agent using the following parameters.
Prompt
#
Select how you want the node to construct the prompt (also known as the user's query or input from the chat).
Choose from:
Take from previous node automatically
: If you select this option, the node expects an input from a previous node called
chatInput
.
Define below
: If you select this option, provide either static text or an expression for dynamic content to serve as the prompt in the
Prompt (User Message)
field.
Require Specific Output Format
#
This parameter controls whether you want the node to require a specific output format. When turned on, n8n prompts you to connect one of these output parsers to the node:
Auto-fixing Output Parser
Item List Output Parser
Structured Output Parser
Node options
#
Refine the Tools Agent node's behavior using these options:
System Message
#
If you'd like to send a message to the agent before the conversation starts, enter the message you'd like to send.
Use this option to guide the agent's decision-making.
Max Iterations
#
Enter the number of times the model should run to try and generate a good answer from the user's prompt.
Defaults to
10
.
Return Intermediate Steps
#
Select whether to include intermediate steps the agent took in the final output (turned on) or not (turned off).
This could be useful for further refining the agent's behavior based on the steps it took.
Automatically Passthrough Binary Images
#
Use this option to control whether binary images should be automatically passed through to the agent as image type messages (turned on) or not (turned off).
Templates and examples
#
Refer to the main AI Agent node's
Templates and examples
section.
Dynamic parameters for tools with
$fromAI()
#
To learn how to dynamically populate parameters for app node tools, refer to
Let AI specify tool parameters with
$fromAI()
.
Common issues
#
For common questions or issues and suggested solutions, refer to
Common issues
.
AI glossary
#
completion
: Completions are the responses generated by a model like GPT.
hallucinations
: Hallucination in AI is when an LLM (large language model) mistakenly perceives patterns or objects that don't exist.
vector database
: A vector database stores mathematical representations of information. Use with embeddings and retrievers to create a database that your AI can access when answering questions.
vector store
: A vector store, or vector database, stores mathematical representations of information. Use with embeddings and retrievers to create a database that your AI can access when answering questions.
Was this page helpful?
Thanks for your feedback!
Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our
GitHub repo
.