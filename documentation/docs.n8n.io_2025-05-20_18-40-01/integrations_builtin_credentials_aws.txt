URL: https://docs.n8n.io/integrations/builtin/credentials/aws/
Scraped_At: 2025-05-20T18:57:33.408649

AWS credentials
#
You can use these credentials to authenticate the following nodes:
AWS Bedrock Chat Model
AWS Certificate Manager
AWS DynamoDB
AWS Elastic Load Balancing
AWS Lambda
AWS Rekognition
AWS S3
AWS SES
AWS SNS
AWS SNS Trigger
AWS SQS
AWS Textract
AWS Transcribe
Embeddings AWS Bedrock
Supported authentication methods
#
API access key
Related resources
#
Refer to
AWS's Identity and Access Management documentation
for more information about the service.
Using API access key
#
To configure this credential, you'll need an
AWS
account and:
Your AWS
Region
The
Access Key ID
: Generated when you create an access key.
The
Secret Access Key
: Generated when you create an access key.
To create an access key and set up the credential:
In your n8n credential, select your AWS
Region
.
Log in to the
IAM console
.
In the navigation bar on the upper right, select your user name and then select
Security credentials
.
In the
Access keys
section, select
Create access key
.
On the
Access key best practices & alternatives page
, choose your use case. If it doesn't prompt you to create an access key, select
Other
.
Select
Next
.
Set a
description
tag value for the access key to make it easier to identify, for example
n8n integration
.
Select
Create access key
.
Reveal the
Access Key ID
and
Secret Access Key
and enter them in n8n.
To use a
Temporary security credential
, turn that option on and add a
Session token
. Refer to the
AWS Temporary security credential documentation
for more information on working with temporary security credentials.
If you use
Amazon Virtual Private Cloud (VPC)
to host n8n, you can establish a connection between your VPC and some apps. Use
Custom Endpoints
to enter relevant custom endpoint(s) for this connection. This setup works with these apps:
Rekognition
Lambda
SNS
SES
SQS
S3
You can also generate access keys through the AWS CLI and AWS API. Refer to the
AWS Managing Access Keys documentation
for instructions on generating access keys using these methods.
Was this page helpful?
Thanks for your feedback!
Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our
GitHub repo
.