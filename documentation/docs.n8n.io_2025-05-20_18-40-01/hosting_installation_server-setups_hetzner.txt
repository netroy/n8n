URL: https://docs.n8n.io/hosting/installation/server-setups/hetzner/
Scraped_At: 2025-05-20T18:44:46.752947

Hosting n8n on Hetzner cloud
#
This hosting guide shows you how to self-host n8n on a Hetzner cloud server. It uses:
Caddy
(a reverse proxy) to allow access to the Server from the internet.
Docker Compose
to create and define the application components and how they work together.
Self-hosting knowledge prerequisites
Self-hosting n8n requires technical knowledge, including:
Setting up and configuring servers and containers
Managing application resources and scaling
Securing servers and applications
Configuring n8n
n8n recommends self-hosting for expert users. Mistakes can lead to data loss, security issues, and downtime. If you aren't experienced at managing servers, n8n recommends
n8n Cloud
.
Latest and Next versions
n8n releases a new minor version most weeks. The
latest
version is for production use.
next
is the most recent release. You should treat
next
as a beta: it may be unstable. To report issues, use the
forum
.
Current
latest
: 1.93.0
Current
next
: 1.94.0
Create a server
#
Log in
to the Hetzner Cloud Console.
Select the project to host the server, or create a new project by selecting
+ NEW PROJECT
.
Select
+ CREATE SERVER
on the project tile you want to add it to.
You can change most of the settings to suit your needs, but as this guide uses Docker to run the application, under the
Image
section, select "Docker CE" from the
APPS
tab.
Type
When creating the server, Hetzner asks you to choose a plan. For most usage levels, the CPX11 type is enough.
SSH keys
Hetzner lets you choose between SSH and password-based authentication. SSH is more secure. The rest of this guide assumes you are using SSH.
Log in to your server
#
The rest of this guide requires you to log in to the server using a terminal with SSH. Refer to
Access with SSH/rsync/BorgBackup
for more information. You can find the public IP in the listing of the servers in your project.
Install Docker Compose
#
The Hetzner Docker app image doesn't have Docker compose installed. Install it with the following commands:
1
2
apt
update
&&
apt
-y
upgrade
apt
install
docker-compose-plugin
Clone configuration repository
#
Docker Compose, n8n, and Caddy require a series of folders and configuration files. You can clone these from
this repository
into the root user folder of the server. The following steps will tell you which file to change and what changes to make.
Clone the repository with the following command:
1
git
clone
https://github.com/n8n-io/n8n-docker-caddy.git
And change directory to the root of the repository you cloned:
1
cd
n8n-docker-caddy
Default folders and files
#
The host operating system (the server) copies the two folders you created to Docker containers to make them available to Docker. The two folders are:
caddy_config
: Holds the Caddy configuration files.
local_files
: A folder for files you upload or add using n8n.
Create Docker volume
#
To persist the Caddy cache between restarts and speed up start times, create
a Docker volume
that Docker reuses between restarts:
1
docker
volume
create
caddy_data
Create a Docker volume for the n8n data:
1
sudo
docker
volume
create
n8n_data
Set up DNS
#
n8n typically operates on a subdomain. Create a DNS record with your provider for the subdomain and point it to the IP address of the server. The exact steps for this depend on your DNS provider, but typically you need to create a new "A" record for the n8n subdomain. DigitalOcean provide
An Introduction to DNS Terminology, Components, and Concepts
.
Open ports
#
n8n runs as a web application, so the server needs to allow incoming access to traffic on port 80 for non-secure traffic, and port 443 for secure traffic.
Open the following ports in the server's firewall by running the following two commands:
1
2
sudo
ufw
allow
80
sudo
ufw
allow
443
Configure n8n
#
n8n needs some environment variables set to pass to the application running in the Docker container. The example
.env
file contains placeholders you need to replace with values of your own.
Open the file with the following command:
1
nano
.env
The file contains inline comments to help you know what to change.
Refer to
Environment variables
for n8n environment variables details.
The Docker Compose file
#
The Docker Compose file (
docker-compose.yml
) defines the services the application needs, in this case Caddy and n8n.
The Caddy service definition defines the ports it uses and the local volumes to copy to the containers.
The n8n service definition defines the ports it uses, the environment variables n8n needs to run (some defined in the
.env
file), and the volumes it needs to copy to the containers.
The Docker Compose file uses the environment variables set in the
.env
file, so you shouldn't need to change it's content, but to take a look, run the following command:
1
nano
docker-compose.yml
Configure Caddy
#
Caddy needs to know which domains it should serve, and which port to expose to the outside world. Edit the
Caddyfile
file in the
caddy_config
folder.
1
nano
caddy_config/Caddyfile
Change the placeholder subdomain to yours. If you followed the steps to name the subdomain n8n, your full domain is similar to
n8n.example.com
. The
n8n
in the
reverse_proxy
setting tells Caddy to use the service definition defined in the
docker-compose.yml
file:
1
2
3
4
5
n8n.<domain>.<suffix> {
    reverse_proxy n8n:5678 {
      flush_interval -1
    }
}
Start Docker Compose
#
Start n8n and Caddy with the following command:
1
docker
compose
up
-d
This may take a few minutes.
Test your setup
#
In your browser, open the URL formed of the subdomain and domain name defined earlier. Enter the user name and password defined earlier, and you should be able to access n8n.
Stop n8n and Caddy
#
You can stop n8n and Caddy with the following command:
1
sudo
docker
compose
stop
Updating
#
If you run n8n using a Docker Compose file, follow these steps to update n8n:
1
2
3
4
5
6
7
8
# Pull latest version
docker
compose
pull
# Stop and remove older version
docker
compose
down
# Start the container
docker
compose
up
-d
Next steps
#
Learn more about
configuring
and
scaling
n8n.
Or explore using n8n: try the
Quickstarts
.
Was this page helpful?
Thanks for your feedback!
Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our
GitHub repo
.