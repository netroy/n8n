name: Test Master

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1
        with:
          ref: ${{ github.sha }}
      - uses: ./.github/actions/build-and-cache
        with:
          cacheKey: ${{ github.sha }}:build

  unit-test:
    name: Unit tests
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        target: [backend, frontend, nodes]
    steps:
      - uses: actions/checkout@v4.1.1
        with:
          ref: ${{ github.sha }}
      - uses: ./.github/actions/unit-tests
        with:
          cacheKey: ${{ github.sha }}:build
          target: ${{ matrix.target }}
          collectCoverage: true

  unit-test-node-20:
    name: Unit tests (Node 20)
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        target: [backend, frontend, nodes]
    steps:
      - uses: actions/checkout@v4.1.1
        with:
          ref: ${{ github.sha }}
      - uses: ./.github/actions/unit-tests
        with:
          cacheKey: ${{ github.sha }}:build
          target: ${{ matrix.target }}
          nodeVersion: 20.x

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        target: [backend, frontend, nodes]
    steps:
      - uses: actions/checkout@v4.1.1
        with:
          ref: ${{ github.sha }}
      - uses: ./.github/actions/lint
        with:
          cacheKey: ${{ github.sha }}:build
          target: ${{ matrix.target }}

  notify-on-failure:
    name: Notify Slack on failure
    runs-on: ubuntu-latest
    needs: [unit-test, unit-test-node-20, lint]
    steps:
      - name: Notify Slack on failure
        uses: act10ns/slack@v2.0.0
        if: failure()
        with:
          status: ${{ job.status }}
          channel: '#alerts-build'
          webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
          message: Master branch (build or test or lint) failed (${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

  upload-coverage:
    name: Upload Coverage
    runs-on: ubuntu-latest
    needs: unit-test
    steps:
      - uses: actions/cache/restore@v4.0.0
        with:
          path: ./packages/**/coverage
          key: ${{ github.sha }}:build:backend:coverage
      - uses: actions/cache/restore@v4.0.0
        with:
          path: ./packages/**/coverage
          key: ${{ github.sha }}:build:frontend:coverage
      - uses: actions/cache/restore@v4.0.0
        with:
          path: ./packages/**/coverage
          key: ${{ github.sha }}:build:nodes:coverage
      - run: ls -R packages
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          files: packages/**/coverage/cobertura-coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}
