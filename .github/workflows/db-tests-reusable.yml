name: Reusable DB test workflow

on:
  workflow_call:
    inputs:
      cache-key:
        description: Cache key for modules and build artifacts.
        required: true
        type: string

jobs:
  sqlite-pooled:
    name: SQLite Pooled
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 20
    env:
      DB_TYPE: sqlite
      DB_SQLITE_POOL_SIZE: 4
    steps:
      - uses: actions/checkout@v4.1.1
      - run: corepack enable
      - uses: actions/setup-node@v4.0.2
        with:
          node-version: 20.x
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile

      - name: Setup build cache
        uses: rharkor/caching-for-turbo@v1.5

      - name: Restore cached build artifacts
        uses: actions/cache/restore@v4.0.0
        with:
          path: ./packages/**/dist
          key: ${{ inputs.cache-key }}

      - name: Test SQLite Pooled
        working-directory: packages/cli
        run: pnpm jest

  mysql:
    name: MySQL
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 20
    env:
      DB_MYSQLDB_PASSWORD: password
    steps:
      - uses: actions/checkout@v4.1.1
      - run: corepack enable
      - uses: actions/setup-node@v4.0.2
        with:
          node-version: 20.x
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile

      - name: Setup build cache
        uses: rharkor/caching-for-turbo@v1.5

      - name: Restore cached build artifacts
        uses: actions/cache/restore@v4.0.0
        with:
          path: ./packages/**/dist
          key: ${{ inputs.cache-key }}

      - name: Start MySQL
        uses: isbang/compose-action@v2.0.0
        with:
          compose-file: ./.github/docker-compose.yml
          services: |
            mysql

      - name: Test MySQL
        working-directory: packages/cli
        run: pnpm test:mysql --testTimeout 20000

  postgres:
    name: Postgres
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 20
    env:
      DB_POSTGRESDB_PASSWORD: password
      DB_POSTGRESDB_POOL_SIZE: 1 # Detect connection pooling deadlocks
    steps:
      - uses: actions/checkout@v4.1.1
      - run: corepack enable
      - uses: actions/setup-node@v4.0.2
        with:
          node-version: 20.x
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile

      - name: Setup build cache
        uses: rharkor/caching-for-turbo@v1.5

      - name: Restore cached build artifacts
        uses: actions/cache/restore@v4.0.0
        with:
          path: ./packages/**/dist
          key: ${{ inputs.cache-key }}

      - name: Start Postgres
        uses: isbang/compose-action@v2.0.0
        with:
          compose-file: ./.github/docker-compose.yml
          services: |
            postgres

      - name: Test Postgres
        working-directory: packages/cli
        run: pnpm test:postgres
